name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    needs: create-release
    strategy:
      fail-fast: false  # Continue with other platforms if one fails
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_suffix: ''
            platform: macos
            sha_cmd: shasum -a 256
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_suffix: '-linux'
            platform: linux
            sha_cmd: sha256sum
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
        
      - name: Calculate SHA256
        id: sha
        run: |
          cd target/${{ matrix.target }}/release
          ${{ matrix.sha_cmd }} q > q.sha256
          echo "sha256=$(cut -d ' ' -f 1 < q.sha256)" >> $GITHUB_OUTPUT
          
      - name: Upload Binary
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.target }}/release/q
            target/${{ matrix.target }}/release/q.sha256
          
      # Store SHA256 for macOS build
      - name: Store macOS SHA256
        if: matrix.platform == 'macos'
        run: |
          mkdir -p ./artifacts
          echo "${{ steps.sha.outputs.sha256 }}" > ./artifacts/macos_sha256
      
      - name: Upload macOS SHA256 Artifact
        if: matrix.platform == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: macos_sha256
          path: ./artifacts/macos_sha256
          retention-days: 1

  update-homebrew:
    needs: build-and-upload
    runs-on: ubuntu-latest
    steps:
      - name: Download macOS SHA256
        uses: actions/download-artifact@v4
        with:
          name: macos_sha256
          path: ./artifacts

      - name: Read macOS SHA256
        id: sha
        run: echo "macos_sha256=$(cat ./artifacts/macos_sha256)" >> $GITHUB_OUTPUT

      - name: Checkout homebrew-tools
        uses: actions/checkout@v4
        with:
          repository: rfushimi/homebrew-tools
          token: ${{ secrets.TAP_GITHUB_TOKEN }}
          path: homebrew-tools

      - name: Update Formula
        run: |
          cd homebrew-tools
          # Extract version from tag
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix
          
          # Update formula using perl instead of sed for better cross-platform compatibility
          perl -i -pe "s|url.*|url \"https://github.com/rfushimi/q/releases/download/${{ github.ref_name }}/q\"|" Formula/q.rb
          perl -i -pe "s|sha256.*|sha256 \"${{ steps.sha.outputs.macos_sha256 }}\"|" Formula/q.rb
          perl -i -pe "s|version.*|version \"${VERSION}\"|" Formula/q.rb
          
          # Commit and push changes
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Formula/q.rb
          git commit -m "q: update to ${{ github.ref_name }}"
          git push
